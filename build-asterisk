#!/bin/bash

ASTERISK_VERSION="11.6-cert11"

DEBIAN_MAINTAINER="Juan Pedro Gonzalez <opensource@jpg-consulting.com>"
PACKAGES_BUILD_DIR="/usr/src/packages"

do_download_asterisk() {
    wget http://downloads.asterisk.org/pub/telephony/certified-asterisk/certified-asterisk-${ASTERISK_VERSION}.tar.gz -O /usr/src/certified-asterisk-${ASTERISK_VERSION}.tar.gz
    
    cd /usr/src
    tar -zxf /usr/src/certified-asterisk-${ASTERISK_VERSION}.tar.gz
    rm /usr/src/certified-asterisk-${ASTERISK_VERSION}.tar.gz
}

do_make_asterisk()
{
    echo "Installing prerequisites."
    apt-get -y -qq update
    apt-get install -y -qq git-core build-essential libsqlite3-dev libxml2-dev libncurses5-dev libncursesw5-dev libiksemel-dev libssl-dev libeditline-dev libedit-dev curl libcurl4-gnutls-dev
    # I will use checkinstall for easier generation
    apt-get install -y -qq checkinstall

    if [ $? -ne 0 ]; then
        echo "Error: Could not install prerequisites."
        exit 1
    fi

    cd /usr/src/certified-asterisk-${ASTERISK_VERSION}
    [ -f /usr/src/certified-asterisk-${ASTERISK_VERSION}/contrib/scripts/install_prereq ] && /usr/src/certified-asterisk-${ASTERISK_VERSION}/contrib/scripts/install_prereq
    [ -f /usr/src/certified-asterisk-${ASTERISK_VERSION}/bootstrap.sh ] && /usr/src/certified-asterisk-${ASTERISK_VERSION}/bootstrap.sh
    ./configure

    make menuselect
    make

    checkinstall --install=no --pkgname=certified-asterisk --pkgversion="1:${ASTERISK_VERSION}" --deldoc=yes --default
    
    # Old code continues...
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}
    
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/default
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/init.d
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/logrotate.d
    
    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/contrib/init.d/rc.debian.asterisk ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/init.d/asterisk
    sed -e "s|__ASTERISK_SBIN_DIR__|/usr/sbin|" -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/init.d/asterisk
    sed -e "s|__ASTERISK_VARRUN_DIR__|/var/run/asterisk|" -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/init.d/asterisk
    sed -e "s|__ASTERISK_ETC_DIR__|/etc/asterisk|" -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/init.d/asterisk
    
    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/contrib/init.d/etc_default_asterisk ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/default/asterisk
    sed -e 's|^#AST_USER="asterisk"|AST_USER="asterisk"|' -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/default/asterisk
    sed -e 's|^#AST_GROUP="asterisk"|AST_GROUP="asterisk"|' -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/default/asterisk

    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/contrib/scripts/asterisk.logrotate ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/logrotate.d/asterisk
    sed -e "s|__LOGDIR__|/var/log/asterisk|" -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/logrotate.d
    sed -e "s|__SBINDIR__|/usr/sbin|" -i ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/etc/logrotate.d
    
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/documentation
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/images
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/sounds
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/sounds/custom
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/moh
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/static-http
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/log/asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/log/asterisk/cdr-csv
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/log/asterisk/cdr-custom
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/log/asterisk/cel-custom
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/dictate
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/meetme
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/monitor
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/outgoing
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/system
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/tmp
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/spool/asterisk/voicemail

    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/doc/appdocsxml.dtd ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/documentation/
    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/doc/core-en_US.xml ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/documentation/
    cp -r /usr/src/certified-asterisk-${ASTERISK_VERSION}/images/* ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/images/
    cp -r /usr/src/certified-asterisk-${ASTERISK_VERSION}/static-http/* ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/var/lib/asterisk/static-http/

    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/usr/include
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/usr/lib
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/usr/sbin
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/usr/share/doc/certified-asterisk
    mkdir -p ${PACKAGES_BUILD_DIR}/certified-asterisk-${ASTERISK_VERSION}/usr/share/man/man8
    
    
}

do_make_chan_dongle() {
    local chan_dongle_version="11-1.1-34"
    apt-get -y -qq install automake
    
    wget https://github.com/jstasiak/asterisk-chan-dongle/archive/asterisk11.tar.gz -O /usr/src/asterisk-chan-dongle-asterisk11.tar.gz
    
    cd /usr/src
    tar -zxf /usr/src/asterisk-chan-dongle-asterisk11.tar.gz
    rm /usr/src/asterisk-chan-dongle-asterisk11.tar.gz
    
    cd /usr/src/asterisk-chan-dongle-asterisk11
    aclocal && autoconf && automake -a
    
    ./configure --with-asterisk="/usr/src/certified-asterisk-${ASTERISK_VERSION}/include"
    make
    
    [ -d /usr/src/asterisk-chan-dongle-${chan_dongle_version} ] && rm -rf /usr/src/asterisk-chan-dongle-${chan_dongle_version}
    mkdir -p /usr/src/asterisk-chan-dongle-${chan_dongle_version}
    mkdir -p /usr/src/asterisk-chan-dongle-${chan_dongle_version}/DEBIAN
    mkdir -p /usr/src/asterisk-chan-dongle-${chan_dongle_version}/etc/asterisk
    mkdir -p /usr/src/asterisk-chan-dongle-${chan_dongle_version}/usr/lib/asterisk/modules/
    
    cp /usr/src/asterisk-chan-dongle-asterisk11/chan_dongle.so /usr/src/asterisk-chan-dongle-${chan_dongle_version}/usr/lib/asterisk/modules/
    cp /usr/src/asterisk-chan-dongle-asterisk11/etc/dongle.conf /usr/src/asterisk-chan-dongle-${chan_dongle_version}/etc/asterisk/
    
    echo "/etc/asterisk/dongle.conf" > /usr/src/asterisk-chan-dongle-${chan_dongle_version}/DEBIAN/conffiles
    
    cat <<EOF > /usr/src/asterisk-chan-dongle-${chan_dongle_version}/DEBIAN/control
Package: asterisk-chan-dongle
Source: asterisk
Version: ${ASTERISK_VERSION}
Architecture: armhf
Maintainer: ${DEBIAN_MAINTAINER}
Depends: usb-modeswitch,usbutils
Section: comm
Priority: optional
Homepage: http://http://wiki.e1550.mobi//
Description: Huawei UMTS cards channel driver for Asterisk
 A channel driver for the Asterisk software telephony PBX using 
 Huawei UMTS cards as a GSM trunk. It is intended to be used 
 with Huawei UMTS hardware that provide such an interface.   
EOF

    # TODO: Postinst - Setup some of the dongle config
    
    cd /usr/src
    dpkg-deb --build asterisk-chan-dongle-${chan_dongle_version}/
}

do_package_config() {
    [ -d /usr/src/certified-asterisk-config-${ASTERISK_VERSION} ] && rm -rf /usr/src/certified-asterisk-config-${ASTERISK_VERSION}
    
    mkdir -p /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/usr/share/doc/asterisk-config/examples/configs/
    mkdir -p /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/etc/asterisk/
    mkdir -p /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/DEBIAN
    
    touch /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/DEBIAN/conffiles
    
    cp /usr/src/certified-asterisk-${ASTERISK_VERSION}/configs/* /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/usr/share/doc/asterisk-config/examples/configs/
    
    for file in /usr/src/certified-asterisk-${ASTERISK_VERSION}/configs/*; do
        dst=${file%.sample}
        dst="/etc/asterisk/${dst##*/}"
        echo "${dst}" >> /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/DEBIAN/conffiles
        cp ${file} /usr/src/certified-asterisk-config-${ASTERISK_VERSION}${dst}
    done

    cat <<EOF > /usr/src/certified-asterisk-config-${ASTERISK_VERSION}/DEBIAN/control
Package: certified-asterisk-config
Source: asterisk
Version: ${ASTERISK_VERSION}
Architecture: all
Maintainer: ${DEBIAN_MAINTAINER}
Recommends: certified-asterisk
Conflicts: asterisk-config-custom, asterisk-config
Section: comm
Priority: optional
Homepage: http://www.asterisk.org/
Description: Configuration files for Asterisk
 Asterisk is an Open Source PBX and telephony toolkit.
 .
 This package contains the default configuration files of Asterisk.    
EOF

    cd /usr/src
    dpkg-deb --build certified-asterisk-config-${ASTERISK_VERSION}/
}

do_download_asterisk
do_package_config
do_make_asterisk
do_make_chan_dongle
